<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BlueprintCategoriesDialog.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>